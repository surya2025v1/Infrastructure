name: Terraform Website-2

on:
  workflow_dispatch:
    inputs:
      bucket_name:
        description: 'Bucket name'
        required: false
        default: 'website-2'
        type: string
      trigger_source:
        description: 'Source of trigger'
        required: false
        default: 'manual'
        type: string
      terraform_action:
        description: 'Terraform action to perform'
        required: false
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

env:
  TF_WORKING_DIR: buckets/website-2
  AWS_REGION: us-east-1

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Terraform Format Check
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform plan -detailed-exitcode -out=tfplan
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.event.inputs.terraform_action == 'apply' || github.event.inputs.terraform_action == ''
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform apply -auto-approve tfplan

      - name: Terraform Destroy
        if: github.event.inputs.terraform_action == 'destroy'
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform destroy -auto-approve

      - name: Get Terraform Outputs
        if: github.event.inputs.terraform_action == 'apply' || github.event.inputs.terraform_action == ''
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          echo "## Terraform Outputs" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          terraform output -json | jq -r 'to_entries[] | "**\(.key):** \(.value.value)"' >> $GITHUB_STEP_SUMMARY

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `#### Terraform Plan for Website-2
            *Workflow: \`${{ github.workflow }}\`*
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${{ steps.plan.outputs.stdout }}
            \`\`\`
            
            </details>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            }) 